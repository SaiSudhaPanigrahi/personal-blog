#!/bin/bash

box(){
    echo "-------------------------------------"
    echo "----- Running $1 tests --------------"
    echo "-------------------------------------"
}

clear_trash(){
    local trash='.pytest_cache'
    [ -d "$trash" ] && echo "removing ${trash} testing trash" && rm -rf ${trash} && echo "environment is cleared"
}


run_tests(){
    local arg=$1
    local test_report="test-report.html"
    local tw_tab="\t\t"
    local th_tab="\t\t\t"

    if [[ ${arg} == "smoke" ]] || [[ ${arg} == "unittest" ]] || [[ ${arg} == "performance" ]];
        then
            box ${arg} && pytest -v -m $1 --html=${test_report}; clear_trash
    elif [[ ${arg} == "all" ]]
        then
            box ${arg} && pytest -v --html=${test_report}; clear_trash
    elif [[ $# -eq 0 ]] || [[ ${arg} == "help" ]]
        then
            echo "Tool allows to simplify run of automated tests for blog project."
            echo ""
            echo "Available actions:"
            echo -e " - smoke${tw_tab} run automated smoke tests"
            echo -e " - unittest${tw_tab} run automated unittest tests"
            echo -e " - performance${tw_tab} run automated unittest tests"
            echo -e " - all${th_tab} run all automated tests"
            echo -e " - help${th_tab} display help"
            echo ""
            echo -e "Note:${th_tab} help will be provided in case of no input parameters"
    else
            echo "Invalid parameter <${arg}> is provided!"
            echo "Please use <smoke>, <unittest> or <performance> key as a flag. For more info please use <help> flag"
            exit 1
    fi

}

run_tests $1
